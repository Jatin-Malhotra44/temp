{"version":3,"sources":["redux/actions/constants.js","components/Header.js","redux/actions/auth.actions.js","components/Layout.js","containers/Signup.js","containers/Home.js","redux/actions/user.actions.js","components/PrivateRoute.js","containers/Signin.js","App.js","serviceWorker.js","redux/reducers/auth.reducer.js","redux/reducers/user.reducer.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["authConstants","userConstants","Header","props","auth","useSelector","state","dispatch","useDispatch","className","style","display","to","margin","color","fontWeight","authenticated","firstName","onClick","uid","a","type","firestore","collection","doc","update","isOnline","then","signOut","localStorage","clear","catch","error","console","log","Layout","children","Signup","useState","email","setEmail","password","setPassword","setFirstName","lastName","setLastName","onSubmit","e","preventDefault","user","db","createUserWithEmailAndPassword","data","currentUser","updateProfile","displayName","set","createdAt","Date","signedinUser","setItem","JSON","stringify","payload","signup","placeholder","value","onChange","event","target","User","src","alt","flex","justifyContent","Home","unsubscribe","chat","setChat","chatUser","setChatUser","message","setMessage","userUid","setUserUid","bg","setBg","search","setSearch","useEffect","onSnapshot","querySnapshot","users","forEach","push","f","initChat","where","uid_1","uid_2","orderBy","conversations","user_uid_1","user_uid_2","length","getRealtimeConversations","background","map","toLowerCase","indexOf","key","borderBottom","con","textAlign","marginTop","fontSize","msgObj","add","isView","updateMessage","borderRadius","PrivateRoute","Component","component","rest","getItem","parse","Signin","signInWithEmailAndPassword","name","split","App","path","exact","Boolean","window","location","hostname","match","initState","authenticating","coversations","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fc72bda0.chunk.js","sourcesContent":["export const authConstants={\r\n    USER_LOGIN_REQUEST:'USER_LOGIN_REQUEST',\r\n    USER_LOGIN_SUCCESS:'USER_LOGIN_SUCCESS',\r\n    USER_LOGIN_FAILURE:'USER_LOGIN_FAILURE',\r\n    \r\n    USER_LOGOUT_REQUEST:'USER_LOGOUT_REQUEST',\r\n    USER_LOGOUT_SUCCESS:'USER_LOGOUT_SUCCESS',\r\n    USER_LOGOUT_FAILURE:'USER_LOGOUT_FAILURE',\r\n\r\n}\r\nexport const userConstants={\r\n    GET_USERS_REQUEST:'GET_USERS_REQUEST',\r\n    GET_USERS_SUCCESS:'GET_USERS_SUCCESS',\r\n    GET_USERS_FAILURE:'GET_USERS_FAILURE',\r\n\r\n    MESSAGES_REQUEST:'MESSAGES_REQUEST',\r\n    MESSAGES_SUCCESS:'MESSAGES_SUCCESS',\r\n    MESSAGES_FAILURE:'MESSAGES_FAILURE',\r\n}","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {logout} from '../redux/actions'\r\nconst Header = (props) => {\r\n    const auth=useSelector(state=>state.auth)\r\n    const dispatch=useDispatch()\r\n    // const onlogout=()=>{\r\n    //     dispatch(logout())\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <header className=\"header\">\r\n                <div style={{display: 'flex'}}>\r\n                {/* <div className=\"logo\"><NavLink to={'/'} className=\"logo\">P-Chat</NavLink></div> */}\r\n                    {/* {\r\n                        !auth.authenticated\r\n                        ?\r\n                        <ul className=\"leftMenu\">\r\n                            <li><NavLink to={'/signin'}>Signin</NavLink></li>\r\n                            <li><NavLink to={'/signup'}>Signup</NavLink></li>\r\n                        </ul>\r\n                        : null    \r\n                    } */}\r\n                 <ul className=\"leftMenu\">\r\n                    <li><NavLink to={'/signin'}>Signin</NavLink></li>\r\n                    <li><NavLink to={'/signup'}>Signup</NavLink></li>\r\n                </ul>   \r\n                </div>\r\n                <div style={{margin: '20px 0', color: '#fff', fontWeight: 'bold'}}>Hi {auth.authenticated?auth.firstName:\"\"}</div>\r\n                <ul className=\"menu\">\r\n                    {\r\n                        auth.authenticated\r\n                        ?\r\n                        \r\n                            <li>\r\n                                <Link to={'#'} onClick={()=>{\r\n                                    dispatch(logout(auth.uid))\r\n                                }}>Logout</Link>\r\n                            </li> \r\n                        \r\n                        : null    \r\n                    }\r\n                </ul>\r\n                \r\n            </header>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import {auth,firestore} from 'firebase'\r\nimport {authConstants} from './constants'\r\n\r\nexport const signup=(user)=>{\r\n    return async (dispatch)=>{\r\n        const db=firestore();\r\n        \r\n        dispatch({type:authConstants.USER_LOGIN_REQUEST})\r\n        \r\n        auth().createUserWithEmailAndPassword(user.email,user.password)\r\n        .then(data=>{\r\n            const currentUser=auth().currentUser\r\n            currentUser.updateProfile({\r\n                displayName:`${user.firstName} ${user.lastName}`\r\n            })\r\n            .then(()=>{\r\n                db.collection('users').doc(data.user.uid)\r\n                .set({\r\n                    firstName:user.firstName,\r\n                    lastName:user.lastName,\r\n                    email:data.user.email,\r\n                    uid:data.user.uid,\r\n                    createdAt:new Date(),\r\n                    isOnline:true\r\n                })\r\n                .then(()=>{\r\n                    const signedinUser={\r\n                        firstName:user.firstName,\r\n                        lastName:user.lastName,\r\n                        email:data.user.email,\r\n                        uid:data.user.uid,\r\n                    }\r\n                    localStorage.setItem('user',JSON.stringify(signedinUser))\r\n                    console.log('Saved successfully...')\r\n                    dispatch({\r\n                        type:authConstants.USER_LOGIN_SUCCESS,\r\n                        payload:{user:signedinUser}\r\n                    })\r\n                })\r\n                .catch(error=>{\r\n                    console.log(error)\r\n                    dispatch({\r\n                        type:authConstants.USER_LOGIN_FAILURE,\r\n                        payload:{error}\r\n                    })\r\n                })\r\n            })\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\nexport const signin=(user)=>{\r\n    return async dispatch=>{\r\n        dispatch({type:authConstants.USER_LOGIN_REQUEST})\r\n        auth().signInWithEmailAndPassword(user.email,user.password)\r\n        .then(data=>{\r\n\r\n            const db=firestore()\r\n            db.collection('users')\r\n            .doc(data.user.uid)\r\n            .update({\r\n                isOnline:true\r\n            })\r\n            .then(()=>{\r\n                const name= data.user.displayName.split(\" \")\r\n                const firstName=name[0]\r\n                const lastName=name[1]\r\n                const signedinUser={\r\n                    firstName,\r\n                    lastName,\r\n                    email:data.user.email,\r\n                    uid:data.user.uid,\r\n                }\r\n                localStorage.setItem('user',JSON.stringify(signedinUser))\r\n                dispatch({\r\n                    type:authConstants.USER_LOGIN_SUCCESS,\r\n                    payload:{user:signedinUser}\r\n                })\r\n            })\r\n            .catch(error=>console.log(error))\r\n            \r\n            console.log('Saved successfully...')\r\n            \r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n            dispatch({\r\n                type:authConstants.USER_LOGIN_FAILURE,\r\n                payload:{error}\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const isSignedUser=()=>{\r\n    return async dispatch=>{\r\n        const user=localStorage.getItem('user')? JSON.parse(localStorage.getItem('user')):null\r\n        if(user){\r\n            dispatch({\r\n                type:authConstants.USER_LOGIN_SUCCESS,\r\n                payload:{user}\r\n            })\r\n        }\r\n        else{\r\n            dispatch({\r\n                type:authConstants.USER_LOGIN_FAILURE,\r\n                payload:{error:'try signin again'}\r\n            })\r\n        }\r\n    }\r\n}\r\nexport const logout=(uid)=>{\r\n    return async dispatch=>{\r\n        dispatch({type:authConstants.USER_LOGOUT_REQUEST})\r\n        \r\n        const db=firestore()\r\n        db.collection('users')\r\n        .doc(uid)\r\n        .update({\r\n            isOnline:false\r\n        })\r\n        .then(()=>{\r\n            auth().signOut()\r\n            .then(()=>{\r\n                localStorage.clear();\r\n                dispatch({ type:authConstants.USER_LOGOUT_SUCCESS})\r\n            })\r\n            .catch(error=>{\r\n                console.log(error)\r\n                dispatch({ type:authConstants.USER_LOGOUT_FAILURE})\r\n            })\r\n        })\r\n        .catch(error=>{console.log(error)})\r\n    }\r\n}","import React from 'react'\r\nimport Header from './Header'\r\n\r\nconst Layout = (props) => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Layout\r\n","import React, { useState } from 'react'\r\nimport './style.css';\r\nimport {signup} from '../redux/actions'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Card from '../components/UI/Card';\r\nimport Layout from '../components/Layout';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Signup = () => {\r\n    const [email,setEmail]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const [firstName,setFirstName]=useState('')\r\n    const [lastName,setLastName]=useState('')\r\n    const dispatch=useDispatch()\r\n    const auth=useSelector(state=>state.auth)\r\n    const userSignup=(e)=>{\r\n        e.preventDefault();\r\n        const user={\r\n            firstName,lastName,email,password \r\n        }\r\n        dispatch(signup(user))\r\n    }\r\n    if(auth.authenticated){\r\n        return <Redirect to={`/`} />\r\n    }\r\n    return (\r\n        <Layout>\r\n        <div className=\"joinOuterContainer\">\r\n        <div className=\"joinInnerContainer\">\r\n            <h3 className=\"heading\">Sign Up</h3>\r\n            <form onSubmit={userSignup}>\r\n                <input className=\"joinInput\" \r\n                    type='text'\r\n                    placeholder='First Name'\r\n                    value={firstName}\r\n                    onChange={event=>{setFirstName(event.target.value)}}\r\n                />\r\n                <input type='text'\r\n                    className=\"joinInput mt-20\"\r\n                    placeholder='Last Name'\r\n                    value={lastName}\r\n                    onChange={event=>{setLastName(event.target.value)}}\r\n                />\r\n                <input type='text'\r\n                    className=\"joinInput mt-20\"\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={event=>{setEmail(event.target.value)}}\r\n                />\r\n                <input type='password'\r\n                    className=\"joinInput mt-20\"\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={event=>{setPassword(event.target.value)}}\r\n                />\r\n                <button className={'button mt-20'} onClick={()=>{}}>Signin</button>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React, { useEffect, useState } from 'react'\r\nimport Layout from '../components/Layout'\r\nimport './home.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRealtimeUsers, updateMessage,getRealtimeConversations } from '../redux/actions';\r\n\r\nconst User=(props)=>{\r\n    const {data,onClick}=props\r\n    return(\r\n        <div onClick={()=>onClick(data)} className=\"displayName\" >\r\n            <div className=\"displayPic\">\r\n                <img src=\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\" alt=\"\" />\r\n            </div>\r\n            <div style={{display:'flex',flex:1,justifyContent:'space-between',margin: '0 10px'}}>\r\n                <span style={{fontWeight: 500}}>{data.firstName}</span>\r\n                {/* <span className={data.isOnline?`onlineStatus`:`onlineStatus`}></span> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Home = (props) => {\r\n    const dispatch=useDispatch()\r\n    const auth=useSelector(state=>state.auth)\r\n    const user=useSelector(state=>state.user)\r\n    const [chat,setChat]=useState(false)\r\n    const [chatUser,setChatUser]=useState('')\r\n    const [message,setMessage]=useState('')\r\n    const [userUid,setUserUid]=useState(null)\r\n    const [bg,setBg]=useState('#e2e0e0')\r\n    const [search,setSearch]=useState('')\r\n    \r\n    let unsubscribe;\r\n    useEffect(()=>{\r\n        unsubscribe=dispatch(getRealtimeUsers(auth.uid))\r\n        .then(unsubscribe=>{\r\n            return unsubscribe\r\n        })\r\n        .catch(error=>{console.log(error)})\r\n        \r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            unsubscribe.then(f=>f()).catch(error=>console.log(error))\r\n        }\r\n    },[])\r\n    \r\n    const initChat=(user)=>{\r\n        setChat(true)\r\n        setChatUser(user.firstName)\r\n        setUserUid(user.uid)\r\n        console.log(user)\r\n        dispatch(getRealtimeConversations({uid_1:auth.uid, uid_2:user.uid}))\r\n        setBg('')\r\n        \r\n    }\r\n\r\n    const submitMessage=(e)=>{\r\n        const msgObj={\r\n            user_uid_1:auth.uid,\r\n            user_uid_2:userUid,\r\n            message\r\n        }\r\n        //console.log(msgObj)\r\n        if(message!==\"\"){\r\n            dispatch(updateMessage(msgObj))\r\n            .then(()=>{\r\n                setMessage('')\r\n            })\r\n        }\r\n    }\r\n    // console.log(user.conversations)\r\n    return (\r\n        <Layout>  \r\n            <section className=\"container\">\r\n                <div className=\"listOfUsers\">\r\n                    <div style={{background:'rgb(211,211,211)'}}>\r\n                        <input type='text' placeholder='Search' className='search'\r\n                        value={search}\r\n                        onChange={event=>{setSearch(event.target.value)}}          \r\n                        />\r\n                    </div>\r\n                    {\r\n                        user.users.length>0\r\n                        ?\r\n                        user.users.map(data=>{\r\n                            if(search !==''&& data.firstName.toLowerCase().indexOf(search.toLowerCase())===-1){\r\n                                return null\r\n                            }\r\n                            return(\r\n                                <div className='userList'>\r\n                                <User\r\n                                onClick={initChat} \r\n                                key={data.uid} \r\n                                data={data}     \r\n                                />\r\n                                <div style={{borderBottom:'solid 1px rgb(211,211,211)'}}></div>\r\n                                </div>\r\n                                \r\n                            )\r\n                        })\r\n                        :\r\n                        null\r\n                    }\r\n                    \r\n                            \r\n                </div>\r\n                <div style={{background:bg}} className=\"chatArea\">\r\n                    <div className=\"chatHeader\">\r\n                        {\r\n                            chat?chatUser:''\r\n                        }\r\n                        \r\n                        {user.firstName} \r\n                    </div>\r\n\r\n                    <div className=\"messageSections\">\r\n                        {\r\n                            chat?\r\n                            user.conversations ?\r\n                            user.conversations.map(con=>\r\n                                <div style={{ textAlign: con.user_uid_1==auth.uid?'right': 'left' }}>\r\n                                    <p className=\"messageStyle\" >{con.message}</p>\r\n                                </div>\r\n                            ):<p className=\"messageStyle\" >Start Conversation</p>\r\n                            \r\n                            :<div style={{textAlign:'center',marginTop:'150px',fontSize:'70px'}}>\r\n                            <h1>Enter a chat to Continue</h1>\r\n                            </div>\r\n                        }\r\n                        {/* {\r\n                            console.log(user.conversations)\r\n                        } */}\r\n                    </div>\r\n                        {\r\n                            chat?\r\n                            <div className=\"chatControls\">\r\n                                {/* <TextField id=\"standard-basic\" label=\"Enter Message\" \r\n                                value={message}\r\n                                onChange={event=>{setMessage(event.target.value)}}\r\n                                /> */}\r\n                                <input className='textMessage'\r\n                                placeholder='Enter Message' \r\n                                value={message}\r\n                                onChange={event=>{setMessage(event.target.value)}}\r\n                                />\r\n                                <button onClick={submitMessage}\r\n                                style={{background:'cyan',borderRadius:'10px'}}\r\n                                >Send</button>\r\n                            </div>\r\n                            :null\r\n                        }\r\n                    \r\n                </div>\r\n            </section>\r\n        </Layout>\r\n    );\r\n}\r\nexport default Home\r\n","import {userConstants} from './constants'\r\nimport {firestore} from 'firebase'\r\n\r\nexport const getRealtimeUsers=(uid)=>{\r\n    return async dispatch=>{\r\n        dispatch({type:userConstants.GET_USERS_REQUEST})\r\n        const db=firestore();\r\n        const unsubscribe=db.collection(\"users\")\r\n        // .where(\"uid\", \"!=\", uid)\r\n        .onSnapshot((querySnapshot)=> {\r\n        const users = [];\r\n        \r\n        querySnapshot.forEach(function(doc) {\r\n            if(uid!=doc.data().uid){\r\n                // console.log('same user')\r\n                users.push(doc.data())\r\n            }\r\n        });\r\n        dispatch({\r\n            type:userConstants.GET_USERS_SUCCESS,\r\n            payload:{users}\r\n        })\r\n    });\r\n    return unsubscribe\r\n    }\r\n}\r\nexport const updateMessage=(msgObj)=>{\r\n    return async dispatch=>{\r\n        const db=firestore()\r\n        db.collection('coversations')\r\n        .add({\r\n            ...msgObj,\r\n            isView:false,\r\n            createdAt: new Date()\r\n        })\r\n        .then(data=>{\r\n            console.log(data)\r\n            // dispatch({\r\n            //     type:userConstants.MESSAGES_SUCCESS,\r\n            //     payload:\r\n            // })\r\n        })\r\n        .catch(error=>{\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\nexport const getRealtimeConversations=(user)=>{\r\n    return async dispatch=>{\r\n        const db=firestore()\r\n        db.collection('coversations')\r\n        .where('user_uid_1','in',[user.uid_1,user.uid_2])\r\n        .orderBy('createdAt','asc')\r\n        .onSnapshot((querySnapshot)=>{\r\n            const conversations=[];\r\n            querySnapshot.forEach(doc=>{\r\n                if(\r\n                    (doc.data().user_uid_1==user.uid_1 && doc.data().user_uid_2==user.uid_2)\r\n                    ||\r\n                    (doc.data().user_uid_1==user.uid_2 && doc.data().user_uid_2==user.uid_1)\r\n                ){conversations.push(doc.data())}\r\n\r\n                if(conversations.length>0){\r\n                    dispatch({\r\n                        type:userConstants.MESSAGES_SUCCESS,\r\n                        payload: {conversations}\r\n                    })\r\n                }\r\n                else{\r\n                    dispatch({\r\n                        type:userConstants.GET_USERS_FAILURE,\r\n                        payload:{conversations}\r\n                    })\r\n                }\r\n                \r\n            })\r\n            console.log(conversations)\r\n        })    \r\n    }\r\n}","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({component:Component,...rest}) => {\r\n    return (\r\n        <Route {...rest} component={(props)=>{\r\n            const user = localStorage.getItem('user')?JSON.parse(localStorage.getItem('user')):null\r\n            \r\n            if(user){\r\n                return <Component {...props}/>\r\n            }else{\r\n                return <Redirect to={`/signup`}/>\r\n            }\r\n        \r\n        }} />\r\n    )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React, { useState } from 'react'\r\n//import './style.css';\r\nimport './auth.css';\r\nimport Layout from '../components/Layout';\r\nimport {signin} from '../redux/actions'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nconst Signin = () => {\r\n    const [email,setEmail]=useState('')\r\n    const [password,setPassword]=useState('')\r\n    const dispatch =useDispatch()\r\n    const auth=useSelector(state=>state.auth)\r\n    \r\n\r\n    const userSignin=(e)=>{\r\n        e.preventDefault();\r\n        dispatch(signin({email,password}))\r\n    }\r\n    if(auth.authenticated){\r\n        return <Redirect to={`/`} />\r\n    }\r\n    return (\r\n        <Layout>\r\n        <div className='joinOuterContainer'>\r\n        <div className='joinInnerContainer'>\r\n            <h3 className=\"heading\">Sign In</h3>\r\n            <form onSubmit={userSignin}>\r\n                <input className=\"joinInput\" \r\n                    type='text'\r\n                    placeholder='Enter email'\r\n                    value={email}\r\n                    onChange={event=>{setEmail(event.target.value)}}\r\n                />\r\n                <input className=\"joinInput mt-20\" \r\n                    type='password'\r\n                    placeholder='Enter Password'\r\n                    value={password}\r\n                    onChange={event=>{setPassword(event.target.value)}}\r\n                />\r\n                <button className={'button mt-20'} onClick={()=>{}}>Signin</button>\r\n            </form>\r\n        </div>\r\n        </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Signin\r\n","import React, { useEffect } from 'react';\nimport Signup from './containers/Signup';\nimport {BrowserRouter,Route} from 'react-router-dom'\nimport Home from './containers/Home';\nimport PrivateRoute from './components/PrivateRoute';\nimport Signin from './containers/Signin';\nimport './App.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isSignedUser } from './redux/actions';\n\nconst App=()=>{\n  const auth=useSelector(state=>state.auth)\n  const dispatch=useDispatch()\n  useEffect(()=>{\n    if(!auth.authenticated){\n        dispatch(isSignedUser())\n    }\n  },[])\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <PrivateRoute path='/' exact component={Home}/>\n      <Route path='/signup' exact component={Signup}/>  \n      <Route path='/signin' exact component={Signin}/>  \n    </div>\n    </BrowserRouter>\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { authConstants } from '../actions/constants'\r\n\r\nconst initState={\r\n    firstName:'',\r\n    lastName:'',\r\n    email:'',\r\n    authenticating:false,\r\n    authenticated:false,\r\n    error:null\r\n}\r\n\r\nexport default(state=initState,action)=>{\r\n    console.log(action)\r\n    switch(action.type){\r\n        case authConstants.USER_LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                authenticating:true\r\n            }\r\n        case authConstants.USER_LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                ...action.payload.user,\r\n                authenticated:true,\r\n                authenticating:false\r\n            }\r\n        case authConstants.USER_LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                error:action.payload.error,\r\n                authenticated:false,\r\n                authenticating:false\r\n            }\r\n        case authConstants.USER_LOGOUT_REQUEST:\r\n            return {...state} \r\n        case authConstants.USER_LOGOUT_SUCCESS:\r\n            return{\r\n                ...initState\r\n            }\r\n        case authConstants.USER_LOGOUT_FAILURE:\r\n            return{\r\n                ...state,\r\n                error:action.payload.error\r\n            }\r\n        default:return state\r\n    }\r\n}","import { userConstants } from \"../actions/constants\"\r\n\r\nconst initState={\r\n    users:[],\r\n    coversations:[]\r\n}\r\nexport default (state=initState,action)=>{\r\n    switch(action.type){\r\n        case userConstants.GET_USERS_REQUEST:\r\n            return{\r\n                ...state\r\n            }\r\n        case userConstants.GET_USERS_SUCCESS:\r\n            return{\r\n                ...state,\r\n                users:action.payload.users\r\n            }\r\n        case userConstants.GET_USERS_REQUEST:\r\n            return{\r\n                ...state\r\n            }\r\n        case userConstants.MESSAGES_SUCCESS:\r\n            return{\r\n                ...state,\r\n                conversations:action.payload.conversations\r\n            }\r\n\r\n        default :return state\r\n        \r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport authReducer from './auth.reducer'\r\nimport userReducer from './user.reducer'\r\n\r\nconst rootReducer=combineReducers({\r\n    auth:authReducer,\r\n    user:userReducer\r\n})\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware} from 'redux'\r\nimport rootReducer from '../reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst store=createStore(rootReducer,applyMiddleware(thunk))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase'\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC43PtzmJ0WLykTKsOZZQoItKfQGUXDY7s\",\n  authDomain: \"p-chat-cb814.firebaseapp.com\",\n  databaseURL: \"https://p-chat-cb814.firebaseio.com\",\n  projectId: \"p-chat-cb814\",\n  storageBucket: \"p-chat-cb814.appspot.com\",\n  messagingSenderId: \"928003008466\",\n  appId: \"1:928003008466:web:c0725f21e2374854e78a0b\",\n  measurementId: \"G-FNSJXZR56B\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nwindow.store=store\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}